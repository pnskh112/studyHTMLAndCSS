/* CSSから別なCSSを読み込むためには@importが必要 */
@import url(sanitize.css);

body {
  background-color: #f0f0f0;
  padding: 10px;
  font-size: 14px;
  color: #666;
}

.container {
  width: 800px;
  /* https://developer.mozilla.org/ja/docs/Web/CSS/box-shadow */
  /*  CSS のプロパティで、要素のフレームの周囲にシャドウ効果を追加します。
        カンマで区切ることで、複数の効果を設定することができます。
        ボックスの影は要素からの相対的な X および Y のオフセット、ぼかしと拡散の半径、色で記述します。 */
  /* box-shadow: 0 0 10px は、左から右にx軸を0ずらす（横はずらさない）、上から下にy軸を0ずらす（上下はずらさない）、影の長さを10pxにする、という意味。 */
  /* rgba(0,0,0, .3) は不透明度まで指定できる色指定で、黒色の影を透過度は0.3で設定している*/
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);
  /* marginが中央に揃うようになる。 */
  margin: 0 auto;
}

header {
  background-color: #422814;
  padding: 10px;
  color: #fff;
}

/* セレクター */
/* https://developer.mozilla.org/ja/docs/Web/CSS/CSS_Selectors */
/* 半角空白を入れることで階層構造を指定することができる */
header h1 {
  margin: 0;
  font-size: 24px;
  /* 通常H1タグは太字になっているのでそれを解除 */
  font-weight: normal;
  /* text-align は CSS のプロパティで、ブロック要素または表セルボックスの水平方向の配置を設定します */
  /* https://developer.mozilla.org/ja/docs/Web/CSS/text-align */
  text-align: center;
}

/* 画像まで右に流れ込んでしまわないように */
/* 回り込ませたい要素だけを回り込ませて、回り込ませたくないものはclearで回り込みを解除する */
/* このような形でレイアウトを作っていくことができる */
.description {
  clear: left;
}
.description img {
  /* 画像を浮かせる */
  /* となりのleftについては、残りの要素をどうするか、という意味 */
  /* 今回は、自分自身が左に浮く、つまり残りの要素は右に流れ込むということになる */
  /* floatを使うことで左右に分かれたようなレイアウトなどを作ることができるようになる */
  float: left;
  /* 左　下　右　上 */
  margin: 0 10px 10px 0;
}

.information h1 {
  font-size: 18px;
  margin: 0 10px 10px 0;
  float: left;
}

.information .type {
  /* display: inlineをつけてあげて特定の要素だけを色変える */
  display: inline;
  background-color: #e35a4d;
  padding: 3px 5px;
  font-size: 80%;
  color: #fff;
}

.content {
  background-color: #fff;
  padding: 20px;
}

.songs {
  /* margin-bottom: 20px; と同じ意味だが、明示的に上と左右は０にするという設定をしているため*/
  margin: 0 0 20px;
}

.songs h2 {
  clear: left;
  font-size: 100%;
  font-weight: normal;
  /* 余白をなくしていく */
  margin: 0;
  background-color: #e6e4dd;
  padding: 5px 10px;
}

.songs ol {
  padding: 0;
  margin: 0;
  /* list-style 文字通りリストのスタイルをどうするかということ */
  /* decimalは普通の算用数字を使うということ */
  /* inside/outside リストの見出し（1.,2.,3.）が要素の並びに含まれるかどうか */
  list-style: decimal inside;
}

.songs li {
  border-bottom: 1px solid #ccc;
  width: 50%;
  /* floatで要素を浮かせるので他の要素がその左側や下側に回り込んでしまう */
  /* 要素が浮いてしまったため、背景に当たる箇所がどこまで高さを決めるべきかわからなくなってしまっている */
  /* そのためにclearfixを使う */
  float: left;
  padding: 5px 10px;
}

.clearfix:after {
  content: ' ';
  display: table;
  clear: both;
}
